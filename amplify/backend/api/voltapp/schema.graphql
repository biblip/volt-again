enum PostStatus {
  VISIBLE
  HIDDEN
  DELETED
  SANCTIONED
}

enum CommentStatus {
  VISIBLE
  HIDDEN
  DELETED
  SANCTIONED
}

type Task @model @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: owner, operations: [create, update, delete, read]}]) {
  id: ID!
  title: String!
  description: String
  status: String
}

type SuggestedAppLink @model @auth(rules: [{allow: groups, groups: ["Admin"]}, {allow: owner, operations: [create, update, delete, read]}]) {
  id: ID!
  category: String!
  link: String!
  description: String
}

type Category @model @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"]}]) {
  id: ID!
  shortName: String!
  name: String!
  manifest: AWSJSON!
  applink: [AppLink] @connection(keyName: "byCategory", fields: ["id"])
  applinkmanifests: [AppLinkManifest] @connection(keyName: "byCategory", fields: ["id"])
}

type AppLinkManifest @model @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"]}]) @key(name: "byCategory", fields: ["categoryID"]) {
  id: ID!
  domain: String!
  manifest: AWSJSON!
  categoryID: ID
}

type AppLink @model @searchable @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"]}, {allow: owner, operations: [create, update, read]}]) @key(name: "byCategory", fields: ["categoryID"]) {
  id: ID!
  domain: String!
  path: String
  resource: String
  categoryID: ID
  singlecomments: [SingleComment] @connection(keyName: "byAppLink", fields: ["id"])
  posts: [Post] @connection(keyName: "byAppLink", fields: ["id"])
}

type PostComment @model @auth(rules: [{allow: private, operations: [read]}, {allow: owner, operations: [create, update, read]}]) @key(name: "byPost", fields: ["postID"]) {
  id: ID!
  content: String!
  status: String
  postID: ID
}

type Post @model @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"]}, {allow: owner, operations: [create, update, read]}]) @key(name: "byAppLink", fields: ["applinkID"]) {
  id: ID!
  title: String!
  content: String!
  status: PostStatus
  applinkID: ID
  postcomments: [PostComment] @connection(keyName: "byPost", fields: ["id"])
}

type SingleComment @model @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"]}, {allow: owner, operations: [create, update, read]}]) @key(name: "byAppLink", fields: ["applinkID"]) {
  id: ID!
  content: String!
  status: CommentStatus
  applinkID: ID
}
 