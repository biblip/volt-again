type Task
    @model
    @auth(rules: [
            { allow: public, provider: iam, operations: [read] },
            { allow: private, operations: [read] },
            { allow: owner, operations: [create, update, delete, read] }
        ]
    ) {
        id: ID!
        title: String!
        description: String
        status: String
    }

type SuggestedAppLink
    @model
    @auth(rules: [
            { allow: groups, groups: ["Admin"] },
            { allow: owner, operations: [create, update, delete, read] }
        ]
    ) {
        id: ID!
        protocol: String!
        domain: String!
        resource: String
    }

type Protocol
    @model
    @auth(rules: [
            { allow: public, provider: iam, operations: [read] },
            { allow: private, operations: [read] },
            { allow: groups, groups: ["Admin"] }
        ]
    ) {
        id: ID!
        name: String!
    }

type AppLink
    @model
    @searchable
    @auth(rules: [
            { allow: public, provider: iam, operations: [read] },
            { allow: private, operations: [read] },
            { allow: groups, groups: ["Admin"] }
        ]
    ) {
        id: ID!
        protocol: String!
        domain: String!
        resource: String
        posts: [Post] @connection(keyName: "byAppLink", fields: ["id"])
    }

type Post
    @model
    @auth(rules: [
            { allow: public, provider: iam, operations: [read] },
            { allow: private, operations: [read] },
            { allow: groups, groups: ["Admin"] },
            { allow: owner, operations: [create, update, read] }
        ]
    ) @key(name: "byAppLink", fields: ["applinkID"]) {
        id: ID!
        title: String!
        content: String!
        status: String
        comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
        applinkID: ID
    }

type Comment
    @model
    @auth(rules: [
            { allow: public, provider: iam, operations: [read] },
            { allow: private, operations: [read] },
            { allow: groups, groups: ["Admin"] },
            { allow: owner, operations: [create, update, read] }
        ]
    ) @key(name: "byPost", fields: ["postID"]) {
        id: ID!
        content: String!
        status: String
        postID: ID
    } 