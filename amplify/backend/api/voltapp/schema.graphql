enum PostStatus {
  VISIBLE
  HIDDEN
  DELETED
  SANCTIONED
}

enum CommentStatus {
  VISIBLE
  HIDDEN
  DELETED
  SANCTIONED
}

type Task @model @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: owner, operations: [create, update, delete, read]}]) {
  id: ID!
  title: String!
  description: String
  status: String
}

type SuggestedAppLink @model @auth(rules: [{allow: groups, groups: ["Admin"]}, {allow: owner, operations: [create, update, delete, read]}]) {
  id: ID!
  category: String!
  link: String!
  description: String
}

type Category @model @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"]}]) {
  id: ID!
  shortName: String!
  name: String!
  manifest: AWSJSON!
}

type AppLink @model @searchable @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"]}, {allow: owner, operations: [create, update, read]}]) {
  id: ID!
  domain: String!
  path: String
  resource: String
  manifest: AWSJSON!
  categoryID: String
}

type Post @model @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"]}, {allow: owner, operations: [create, update, read]}]) {
  id: ID!
  title: String!
  content: String!
  status: PostStatus
  appLinkID: String
}

type Comment @model @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"]}, {allow: owner, operations: [create, update, read]}]) {
  id: ID!
  content: String!
  status: String
  postID: String
}

type SingleComment @model @auth(rules: [{allow: public, provider: iam, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["Admin"]}, {allow: owner, operations: [create, update, read]}]) {
  id: ID!
  content: String!
  status: CommentStatus
  appLinkID: String
}
 